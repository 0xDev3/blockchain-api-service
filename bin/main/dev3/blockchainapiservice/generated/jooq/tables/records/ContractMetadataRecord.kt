/*
 * This file is generated by jOOQ.
 */
package dev3.blockchainapiservice.generated.jooq.tables.records


import dev3.blockchainapiservice.generated.jooq.tables.ContractMetadataTable
import dev3.blockchainapiservice.util.ContractId

import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


@Suppress("UNCHECKED_CAST")
open class ContractMetadataRecord() : UpdatableRecordImpl<ContractMetadataRecord>(ContractMetadataTable) {

    var id: UUID
        private set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    var contractId: ContractId
        private set(value): Unit = set(1, value)
        get(): ContractId = get(1) as ContractId

    var contractTags: Array<String>
        private set(value): Unit = set(2, value)
        get(): Array<String> = get(2) as Array<String>

    var contractImplements: Array<String>
        private set(value): Unit = set(3, value)
        get(): Array<String> = get(3) as Array<String>

    var name: String?
        private set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    var description: String?
        private set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    var projectId: UUID
        private set(value): Unit = set(6, value)
        get(): UUID = get(6) as UUID
    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    constructor(id: UUID, contractId: ContractId, contractTags: Array<String>, contractImplements: Array<String>, name: String?, description: String?, projectId: UUID): this() {
        this.id = id
        this.contractId = contractId
        this.contractTags = contractTags
        this.contractImplements = contractImplements
        this.name = name
        this.description = description
        this.projectId = projectId
    }
}
