/*
 * This file is generated by jOOQ.
 */
package dev3.blockchainapiservice.generated.jooq.tables.records


import dev3.blockchainapiservice.generated.jooq.tables.MultiPaymentTemplateItemTable
import dev3.blockchainapiservice.util.Balance
import dev3.blockchainapiservice.util.UtcDateTime
import dev3.blockchainapiservice.util.WalletAddress

import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


@Suppress("UNCHECKED_CAST")
open class MultiPaymentTemplateItemRecord() : UpdatableRecordImpl<MultiPaymentTemplateItemRecord>(MultiPaymentTemplateItemTable) {

    var id: UUID
        private set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    var templateId: UUID
        private set(value): Unit = set(1, value)
        get(): UUID = get(1) as UUID

    var walletAddress: WalletAddress
        private set(value): Unit = set(2, value)
        get(): WalletAddress = get(2) as WalletAddress

    var itemName: String?
        private set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    var assetAmount: Balance
        private set(value): Unit = set(4, value)
        get(): Balance = get(4) as Balance

    var createdAt: UtcDateTime
        private set(value): Unit = set(5, value)
        get(): UtcDateTime = get(5) as UtcDateTime
    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    constructor(id: UUID, templateId: UUID, walletAddress: WalletAddress, itemName: String?, assetAmount: Balance, createdAt: UtcDateTime): this() {
        this.id = id
        this.templateId = templateId
        this.walletAddress = walletAddress
        this.itemName = itemName
        this.assetAmount = assetAmount
        this.createdAt = createdAt
    }
}
