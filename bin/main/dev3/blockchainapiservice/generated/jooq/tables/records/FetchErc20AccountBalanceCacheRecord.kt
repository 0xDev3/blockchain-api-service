/*
 * This file is generated by jOOQ.
 */
package dev3.blockchainapiservice.generated.jooq.tables.records


import dev3.blockchainapiservice.generated.jooq.tables.FetchErc20AccountBalanceCacheTable
import dev3.blockchainapiservice.util.Balance
import dev3.blockchainapiservice.util.BlockNumber
import dev3.blockchainapiservice.util.ChainId
import dev3.blockchainapiservice.util.ContractAddress
import dev3.blockchainapiservice.util.UtcDateTime
import dev3.blockchainapiservice.util.WalletAddress

import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


@Suppress("UNCHECKED_CAST")
open class FetchErc20AccountBalanceCacheRecord() : UpdatableRecordImpl<FetchErc20AccountBalanceCacheRecord>(FetchErc20AccountBalanceCacheTable) {

    var id: UUID
        private set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    var chainId: ChainId
        private set(value): Unit = set(1, value)
        get(): ChainId = get(1) as ChainId

    var customRpcUrl: String
        private set(value): Unit = set(2, value)
        get(): String = get(2) as String

    var contractAddress: ContractAddress
        private set(value): Unit = set(3, value)
        get(): ContractAddress = get(3) as ContractAddress

    var walletAddress: WalletAddress
        private set(value): Unit = set(4, value)
        get(): WalletAddress = get(4) as WalletAddress

    var blockNumber: BlockNumber
        private set(value): Unit = set(5, value)
        get(): BlockNumber = get(5) as BlockNumber

    var timestamp: UtcDateTime
        private set(value): Unit = set(6, value)
        get(): UtcDateTime = get(6) as UtcDateTime

    var assetAmount: Balance
        private set(value): Unit = set(7, value)
        get(): Balance = get(7) as Balance
    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    constructor(id: UUID, chainId: ChainId, customRpcUrl: String, contractAddress: ContractAddress, walletAddress: WalletAddress, blockNumber: BlockNumber, timestamp: UtcDateTime, assetAmount: Balance): this() {
        this.id = id
        this.chainId = chainId
        this.customRpcUrl = customRpcUrl
        this.contractAddress = contractAddress
        this.walletAddress = walletAddress
        this.blockNumber = blockNumber
        this.timestamp = timestamp
        this.assetAmount = assetAmount
    }
}
