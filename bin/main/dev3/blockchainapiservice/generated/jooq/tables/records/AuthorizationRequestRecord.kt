/*
 * This file is generated by jOOQ.
 */
package dev3.blockchainapiservice.generated.jooq.tables.records


import com.fasterxml.jackson.databind.JsonNode

import dev3.blockchainapiservice.generated.jooq.tables.AuthorizationRequestTable
import dev3.blockchainapiservice.util.SignedMessage
import dev3.blockchainapiservice.util.UtcDateTime
import dev3.blockchainapiservice.util.WalletAddress

import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


@Suppress("UNCHECKED_CAST")
open class AuthorizationRequestRecord() : UpdatableRecordImpl<AuthorizationRequestRecord>(AuthorizationRequestTable) {

    var id: UUID
        private set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    var projectId: UUID
        private set(value): Unit = set(1, value)
        get(): UUID = get(1) as UUID

    var redirectUrl: String
        private set(value): Unit = set(2, value)
        get(): String = get(2) as String

    var requestedWalletAddress: WalletAddress?
        private set(value): Unit = set(3, value)
        get(): WalletAddress? = get(3) as WalletAddress?

    var actualWalletAddress: WalletAddress?
        private set(value): Unit = set(4, value)
        get(): WalletAddress? = get(4) as WalletAddress?

    var signedMessage: SignedMessage?
        private set(value): Unit = set(5, value)
        get(): SignedMessage? = get(5) as SignedMessage?

    var arbitraryData: JsonNode?
        private set(value): Unit = set(6, value)
        get(): JsonNode? = get(6) as JsonNode?

    var screenBeforeActionMessage: String?
        private set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    var screenAfterActionMessage: String?
        private set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    var createdAt: UtcDateTime
        private set(value): Unit = set(9, value)
        get(): UtcDateTime = get(9) as UtcDateTime

    var messageToSignOverride: String?
        private set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    var storeIndefinitely: Boolean
        private set(value): Unit = set(11, value)
        get(): Boolean = get(11) as Boolean
    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    constructor(id: UUID, projectId: UUID, redirectUrl: String, requestedWalletAddress: WalletAddress?, actualWalletAddress: WalletAddress?, signedMessage: SignedMessage?, arbitraryData: JsonNode?, screenBeforeActionMessage: String?, screenAfterActionMessage: String?, createdAt: UtcDateTime, messageToSignOverride: String?, storeIndefinitely: Boolean): this() {
        this.id = id
        this.projectId = projectId
        this.redirectUrl = redirectUrl
        this.requestedWalletAddress = requestedWalletAddress
        this.actualWalletAddress = actualWalletAddress
        this.signedMessage = signedMessage
        this.arbitraryData = arbitraryData
        this.screenBeforeActionMessage = screenBeforeActionMessage
        this.screenAfterActionMessage = screenAfterActionMessage
        this.createdAt = createdAt
        this.messageToSignOverride = messageToSignOverride
        this.storeIndefinitely = storeIndefinitely
    }
}
