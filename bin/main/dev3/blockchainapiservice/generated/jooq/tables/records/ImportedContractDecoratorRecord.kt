/*
 * This file is generated by jOOQ.
 */
package dev3.blockchainapiservice.generated.jooq.tables.records


import dev3.blockchainapiservice.generated.jooq.tables.ImportedContractDecoratorTable
import dev3.blockchainapiservice.model.json.ArtifactJson
import dev3.blockchainapiservice.model.json.ManifestJson
import dev3.blockchainapiservice.util.ContractId
import dev3.blockchainapiservice.util.UtcDateTime

import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


@Suppress("UNCHECKED_CAST")
open class ImportedContractDecoratorRecord() : UpdatableRecordImpl<ImportedContractDecoratorRecord>(ImportedContractDecoratorTable) {

    var id: UUID
        private set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    var projectId: UUID
        private set(value): Unit = set(1, value)
        get(): UUID = get(1) as UUID

    var contractId: ContractId
        private set(value): Unit = set(2, value)
        get(): ContractId = get(2) as ContractId

    var manifestJson: ManifestJson
        private set(value): Unit = set(3, value)
        get(): ManifestJson = get(3) as ManifestJson

    var artifactJson: ArtifactJson
        private set(value): Unit = set(4, value)
        get(): ArtifactJson = get(4) as ArtifactJson

    var infoMarkdown: String
        private set(value): Unit = set(5, value)
        get(): String = get(5) as String

    var contractTags: Array<String>
        private set(value): Unit = set(6, value)
        get(): Array<String> = get(6) as Array<String>

    var contractImplements: Array<String>
        private set(value): Unit = set(7, value)
        get(): Array<String> = get(7) as Array<String>

    var importedAt: UtcDateTime
        private set(value): Unit = set(8, value)
        get(): UtcDateTime = get(8) as UtcDateTime
    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    constructor(id: UUID, projectId: UUID, contractId: ContractId, manifestJson: ManifestJson, artifactJson: ArtifactJson, infoMarkdown: String, contractTags: Array<String>, contractImplements: Array<String>, importedAt: UtcDateTime): this() {
        this.id = id
        this.projectId = projectId
        this.contractId = contractId
        this.manifestJson = manifestJson
        this.artifactJson = artifactJson
        this.infoMarkdown = infoMarkdown
        this.contractTags = contractTags
        this.contractImplements = contractImplements
        this.importedAt = importedAt
    }
}
