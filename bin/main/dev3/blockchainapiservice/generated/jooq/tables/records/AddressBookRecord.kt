/*
 * This file is generated by jOOQ.
 */
package dev3.blockchainapiservice.generated.jooq.tables.records


import dev3.blockchainapiservice.generated.jooq.tables.AddressBookTable
import dev3.blockchainapiservice.util.UtcDateTime
import dev3.blockchainapiservice.util.WalletAddress

import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


@Suppress("UNCHECKED_CAST")
open class AddressBookRecord() : UpdatableRecordImpl<AddressBookRecord>(AddressBookTable) {

    var id: UUID
        private set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    var alias: String
        private set(value): Unit = set(1, value)
        get(): String = get(1) as String

    var walletAddress: WalletAddress
        private set(value): Unit = set(2, value)
        get(): WalletAddress = get(2) as WalletAddress

    var phoneNumber: String?
        private set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    var email: String?
        private set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    var createdAt: UtcDateTime
        private set(value): Unit = set(5, value)
        get(): UtcDateTime = get(5) as UtcDateTime

    var userId: UUID
        private set(value): Unit = set(6, value)
        get(): UUID = get(6) as UUID
    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    constructor(id: UUID, alias: String, walletAddress: WalletAddress, phoneNumber: String?, email: String?, createdAt: UtcDateTime, userId: UUID): this() {
        this.id = id
        this.alias = alias
        this.walletAddress = walletAddress
        this.phoneNumber = phoneNumber
        this.email = email
        this.createdAt = createdAt
        this.userId = userId
    }
}
